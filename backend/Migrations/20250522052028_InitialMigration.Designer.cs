// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522052028_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Alergia", b =>
                {
                    b.Property<int>("ID_Alergias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Alergias"));

                    b.Property<string>("Nombre_Alergia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Alergias");

                    b.ToTable("Alergias", (string)null);
                });

            modelBuilder.Entity("backend.Models.Bitacora", b =>
                {
                    b.Property<int>("ID_Bitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Bitacora"));

                    b.Property<DateTime>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Registro")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Tabla")
                        .HasColumnType("int");

                    b.Property<int?>("ID_TipoDeMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Bitacora");

                    b.HasIndex("ID_Tabla");

                    b.HasIndex("ID_TipoDeMovimiento");

                    b.ToTable("Bitacora", (string)null);
                });

            modelBuilder.Entity("backend.Models.CitaMedica", b =>
                {
                    b.Property<int>("ID_Cita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cita"));

                    b.Property<DateTime>("Fecha_Cita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora_Cita")
                        .HasColumnType("time");

                    b.Property<int>("ID_Consultorio")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Estatus")
                        .HasColumnType("int");

                    b.Property<int>("ID_Medico")
                        .HasColumnType("int");

                    b.Property<int>("ID_Paciente")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ultima_Actualizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Cita");

                    b.HasIndex("ID_Consultorio");

                    b.HasIndex("ID_Estatus");

                    b.HasIndex("ID_Medico");

                    b.HasIndex("ID_Paciente");

                    b.ToTable("CitasMedicas", (string)null);
                });

            modelBuilder.Entity("backend.Models.Consultorio", b =>
                {
                    b.Property<int>("ID_Consultorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Consultorio"));

                    b.Property<int?>("ID_Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Consultorio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Consultorio");

                    b.HasIndex("ID_Estatus");

                    b.ToTable("Consultorios", (string)null);
                });

            modelBuilder.Entity("backend.Models.Especialidad", b =>
                {
                    b.Property<int>("ID_Especialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Especialidad"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Especialidad");

                    b.ToTable("Especialidades", (string)null);
                });

            modelBuilder.Entity("backend.Models.EstatusCita", b =>
                {
                    b.Property<int>("ID_Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estatus"));

                    b.Property<string>("Nombre_Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Estatus");

                    b.ToTable("Estatus_Citas", (string)null);
                });

            modelBuilder.Entity("backend.Models.EstatusConsultorio", b =>
                {
                    b.Property<int>("ID_Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estatus"));

                    b.Property<string>("Nombre_Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Estatus");

                    b.ToTable("Estatus_Consultorios", (string)null);
                });

            modelBuilder.Entity("backend.Models.EstatusMedico", b =>
                {
                    b.Property<int>("ID_Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estatus"));

                    b.Property<string>("Nombre_Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Estatus");

                    b.ToTable("Estatus_Medicos", (string)null);
                });

            modelBuilder.Entity("backend.Models.EstatusPaciente", b =>
                {
                    b.Property<int>("ID_Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estatus"));

                    b.Property<string>("Nombre_Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Estatus");

                    b.ToTable("Estatus_Pacientes", (string)null);
                });

            modelBuilder.Entity("backend.Models.EstatusUsuario", b =>
                {
                    b.Property<int>("ID_Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estatus"));

                    b.Property<string>("Nombre_Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Estatus");

                    b.ToTable("Estatus_Usuarios", (string)null);
                });

            modelBuilder.Entity("backend.Models.Genero", b =>
                {
                    b.Property<int>("ID_Generos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Generos"));

                    b.Property<string>("Genero_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Generos");

                    b.ToTable("Generos", (string)null);
                });

            modelBuilder.Entity("backend.Models.Medico", b =>
                {
                    b.Property<int>("ID_Medico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Medico"));

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Correo")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Especialidad")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Medico");

                    b.HasIndex("ID_Especialidad");

                    b.HasIndex("ID_Estatus");

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("backend.Models.Operacion", b =>
                {
                    b.Property<int>("ID_Operaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Operaciones"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Operacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Operaciones");

                    b.ToTable("Operaciones", (string)null);
                });

            modelBuilder.Entity("backend.Models.Paciente", b =>
                {
                    b.Property<int>("ID_Paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Paciente"));

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CURP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Calle")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Codigo_Postal")
                        .HasColumnType("int");

                    b.Property<string>("Correo_Electronico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Alergias")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Estatus")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Genero")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Operaciones")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Padecimientos")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Num_Calle")
                        .HasColumnType("int");

                    b.Property<float?>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Paciente");

                    b.HasIndex("ID_Alergias");

                    b.HasIndex("ID_Estatus");

                    b.HasIndex("ID_Genero");

                    b.HasIndex("ID_Operaciones");

                    b.HasIndex("ID_Padecimientos");

                    b.HasIndex("ID_Tipo");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("backend.Models.Padecimiento", b =>
                {
                    b.Property<int>("ID_Padecimientos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Padecimientos"));

                    b.Property<string>("Nombre_Padecimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Padecimientos");

                    b.ToTable("Padeciminetos", (string)null);
                });

            modelBuilder.Entity("backend.Models.Rol", b =>
                {
                    b.Property<int>("ID_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Rol"));

                    b.Property<string>("Nombre_Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Rol");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("backend.Models.Tabla", b =>
                {
                    b.Property<int>("ID_Tabla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tabla"));

                    b.Property<string>("Nombre_Tabla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Tabla");

                    b.ToTable("Tablas", (string)null);
                });

            modelBuilder.Entity("backend.Models.TipoMovimiento", b =>
                {
                    b.Property<int>("ID_TipoDeMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TipoDeMovimiento"));

                    b.Property<string>("Descripcion_Movimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TipoDeMovimiento");

                    b.ToTable("TiposDeMovimientos", (string)null);
                });

            modelBuilder.Entity("backend.Models.TipoSangre", b =>
                {
                    b.Property<int>("ID_Tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tipo"));

                    b.Property<string>("Tipo_Sangre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Tipo");

                    b.ToTable("TipoSangre", (string)null);
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.Property<int>("ID_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Usuario"));

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Correo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Estatus")
                        .HasColumnType("int");

                    b.Property<int>("ID_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Usuario");

                    b.HasIndex("ID_Estatus");

                    b.HasIndex("ID_Rol");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("backend.Models.Bitacora", b =>
                {
                    b.HasOne("backend.Models.Tabla", "Tabla")
                        .WithMany()
                        .HasForeignKey("ID_Tabla");

                    b.HasOne("backend.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("ID_TipoDeMovimiento");

                    b.Navigation("Tabla");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("backend.Models.CitaMedica", b =>
                {
                    b.HasOne("backend.Models.Consultorio", "Consultorio")
                        .WithMany()
                        .HasForeignKey("ID_Consultorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.EstatusCita", "Estatus")
                        .WithMany()
                        .HasForeignKey("ID_Estatus");

                    b.HasOne("backend.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("ID_Medico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("ID_Paciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");

                    b.Navigation("Estatus");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("backend.Models.Consultorio", b =>
                {
                    b.HasOne("backend.Models.EstatusConsultorio", "Estatus")
                        .WithMany()
                        .HasForeignKey("ID_Estatus");

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("backend.Models.Medico", b =>
                {
                    b.HasOne("backend.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("ID_Especialidad");

                    b.HasOne("backend.Models.EstatusMedico", "Estatus")
                        .WithMany()
                        .HasForeignKey("ID_Estatus");

                    b.Navigation("Especialidad");

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("backend.Models.Paciente", b =>
                {
                    b.HasOne("backend.Models.Alergia", "Alergia")
                        .WithMany()
                        .HasForeignKey("ID_Alergias");

                    b.HasOne("backend.Models.EstatusPaciente", "Estatus")
                        .WithMany()
                        .HasForeignKey("ID_Estatus");

                    b.HasOne("backend.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("ID_Genero");

                    b.HasOne("backend.Models.Operacion", "Operacion")
                        .WithMany()
                        .HasForeignKey("ID_Operaciones");

                    b.HasOne("backend.Models.Padecimiento", "Padecimiento")
                        .WithMany()
                        .HasForeignKey("ID_Padecimientos");

                    b.HasOne("backend.Models.TipoSangre", "TipoSangre")
                        .WithMany()
                        .HasForeignKey("ID_Tipo");

                    b.Navigation("Alergia");

                    b.Navigation("Estatus");

                    b.Navigation("Genero");

                    b.Navigation("Operacion");

                    b.Navigation("Padecimiento");

                    b.Navigation("TipoSangre");
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.HasOne("backend.Models.EstatusUsuario", "Estatus")
                        .WithMany()
                        .HasForeignKey("ID_Estatus");

                    b.HasOne("backend.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("ID_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estatus");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
